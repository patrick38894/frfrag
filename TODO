Note: Due on the 5th of June. (11 days remain).

Broad goals
-----------
* Print and run test cases:
    * Minimal shader
    * Color
    * A more interesting shader (glow/texture)
    * Region: Remake "house drawing" with flat color, and shader.
    * Reactions. Follow mouse, change color.
    * Remake paddleball game.
* Cool exmaples:
    * Mandelbrot explorer
    * Newton fractal explorer
    * Voronoi cells (react to mouse)
    * Raindrops/ripples
    * Starfield

* Add dependency handling; allow Exprs with static dependencies to have those dependencies declared inline in the Declarations section.
* Follow the development of the mandelbrot (and other test shaders) with some writeups.
* Use pipes to connect GLSL input stream to output.
* Make a "timed pipe" that reads an input stream gradually and implements FRP on the GLFW inputs.
* Make all FRP primitives.
    * Ev prims
    * Beh prims
* "Compile" a shader - extract static declarations and compute them once,
    unfold finite recursion, convert things to SSA, applies reduction rules, etc.
* Add structure/type checker.
