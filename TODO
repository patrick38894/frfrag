TODO

0) Add FRP primitives (Abstract uniforms into FRP vars)
    * Primitives act at the level of what shaders are chosen and what uniforms exist,
        and stuff solely in FRP infrastructure.
    * Use the semantic class notion again,
        then implement in Pipes.

1) Add GLFW test setup
2) Add Pipes control of uniforms

4) Add shapes and regions
    * Purely done at the shader program level, not FRP (though can control centers/etc with params)
     Tests (outline and fill):
         Circle
         Square
         Triangle
         Regular polygon
         Area under a curve
         Intersection of circle and square            

5) More tests
     Light following mouse
     Fractal explorer (newton, mandel)
     Hyperbolic pong
     Water/rain/ripples
     Fire
     Starfield

6) Add combinators, e.g. lambda, application, 
    "Warp" - change underlying glFragcoord in all occurrances,
    "Tint" change color in all occurances

7) Add Stream functions for more abstract loops

8) Add Structs. Add GHC-Generic based struct coupling.

9) Add optimization - constant folding.

10) Clean up repo and refactor. Make all errors consistently handled.
